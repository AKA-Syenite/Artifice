buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "http://dl.bintray.com/content/noamt/gradle-plugins"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org._10ne.gradle:rest-gradle-plugin:$LATEST_VERSION'
    }
}
repositories {
    ivy {
        name "CoFHCore"
        artifactPattern 'http://addons-origin.cursecdn.com/files/2229/536/[module]-[revision].[ext]'
    }
}

apply plugin: 'forge'
apply plugin: 'rest'

mc_version = "1.7.10"
mod_version = "1.1.5R"
build_number = System.getenv("BUILD_NUMBER")
if (!build_number) {
    build_number = System.getenv("TRAVIS_BUILD_NUMBER")
}
if (build_number) {
    // add the build # of the last jenkins build for consistency
    version = mc_version + "-" + mod_version + "-" + (349 + System.getenv("TRAVIS_BUILD_NUMBER"))
} else {
    version = mc_version + "-" + mod_version + "-" + "DEV"
}

curseType = 'release'
if(mod_version.endsWith("A")) {
    curseType = 'alpha'
} else if(mod_version.endsWith("B")) {
    curseType = 'beta'
}

group = "com.shukaro.artifice"
archivesBaseName = "Artifice"

minecraft {
    // forge version
    version = "1.7.10-10.13.2.1230"
    runDir = "minecraft"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    compile group: 'cofh', name: 'CoFHCore', version: '[1.7.10]3.0.0RC5-207-dev', ext: 'jar'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def getGitChangelog = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        def gitHash = System.getenv("GIT_COMMIT")
        def gitPrevHash = System.getenv("GIT_PREVIOUS_COMMIT")
        def travisRange = System.getenv("TRAVIS_COMMIT_RANGE")
        if(gitHash && gitPrevHash) {
            exec {
                commandLine 'git', 'log', '--pretty=tformat:%s - %aN', '' + gitPrevHash + '...' + gitHash
                standardOutput = stdout
            }
            return stdout.toString().trim()
        } else if(travisRange) {
            exec {
                commandLine 'git', 'log', '--pretty=tformat:%s - %aN', '' + travisRange
                standardOutput = stdout
            }
            return stdout.toString().trim()
        } else {
            return "";
        }
    } catch(ignored) {
        return "";
    }
}

task curse(type: org._10ne.gradle.rest.RestTask) {
    httpMethod = 'post'
    uri = 'https://minecraft.curseforge.com/api/projects/223174/upload-file'
    contentType = groovyx.net.http.ContentType.JSON
    // 4449 = 1.7.10
    requestBody = ['metadata': ['changelog': getGitChangelog(),'gameVersions': [4449], 'releaseType': curseType], 'file': file('./build/libs/' + archivesBaseName + '-' + version + '.jar')]
    curseKey = System.getenv("CURSE_API_KEY")
    requestHeaders = ['X-API-Token': curseKey]
}

task modsio(type: org._10ne.gradle.rest.RestTask) {
}