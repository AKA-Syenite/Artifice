import org.apache.commons.io.output.ByteArrayOutputStream

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}
repositories {
    ivy {
        name "CoFHCore"
        artifactPattern 'http://addons-origin.cursecdn.com/files/2229/536/[module]-[revision].[ext]'
    }
}

apply plugin: 'forge'

ext.mc_version = "1.7.10"
ext.mod_version = "1.1.5R"
ext.build_number = System.getenv("BUILD_NUMBER")
if (!ext.build_number) {
    ext.build_number = System.getenv("TRAVIS_BUILD_NUMBER")
}
if (ext.build_number) {
    // add the build # of the last jenkins build for consistency
    ext.version = ext.mc_version + "-" + ext.mod_version + "-" + (349 + System.getenv("TRAVIS_BUILD_NUMBER"))
} else {
    ext.version = ext.mc_version + "-" + ext.mod_version + "-" + "DEV"
}

if(ext.mod_version.endsWith("A")) {
    project.ext.set("curseType", "alpha")
} else if(ext.mod_version.endsWith("B")) {
    project.ext.set("curseType", "beta")
} else {
    project.ext.set("curseType", "release")
}
project.ext.set("curseProjectID", "223174")

group = "com.shukaro.artifice"
archivesBaseName = "Artifice"

minecraft {
    // forge version
    version = "1.7.10-10.13.2.1230"
    runDir = "minecraft"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    compile group: 'cofh', name: 'CoFHCore', version: '[1.7.10]3.0.0RC5-207-dev', ext: 'jar'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def getGitChangelog = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        def gitHash = System.getenv("GIT_COMMIT")
        def gitPrevHash = System.getenv("GIT_PREVIOUS_COMMIT")
        def travisRange = System.getenv("TRAVIS_COMMIT_RANGE")
        if(gitHash && gitPrevHash) {
            exec {
                commandLine 'git', 'log', '--pretty=tformat:%s - %aN', '' + gitPrevHash + '...' + gitHash
                standardOutput = stdout
            }
            return stdout.toString().trim()
        } else if(travisRange) {
            exec {
                commandLine 'git', 'log', '--pretty=tformat:%s - %aN', '' + travisRange
                standardOutput = stdout
            }
            return stdout.toString().trim()
        } else {
            return "";
        }
    } catch(ignored) {
        return "";
    }
}

task publish(dependsOn: ['build','curseUpload','modsioUpload'])

task curseUpload(type: Exec) {
    executable 'curl'
    // 4449 = 1.7.10
    args = ['-F', 'metadata={\"releaseType\":\"' + project.curseType + '\",\"changelog\":\"' + getGitChangelog() + '\",\"gameVersions\":[4449]}',
            '-F', 'file=@$(find ./build/libs -name *.jar)',
            '-H', 'X-API-Token: ' + System.getenv("CURSE_API_KEY"),
            '-v', 'https://minecraft.curseforge.com/api/projects/' + project.curseProjectID + '/upload-file']
}

task modsioUpload(type: Exec) {
}